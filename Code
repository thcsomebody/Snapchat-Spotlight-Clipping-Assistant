{
Â  "node_type": "Schedule Trigger",
Â  "cron": "0 8 * * *",
Â  "description": "Daily trigger at 8 AM for market research"
}

{
Â  "node_type": "HTTP Request",
Â  "method": "GET",
Â  "url": "https://api.tiktok.com/research/trending",
Â  "headers": {
Â Â Â  "Authorization": "Bearer {{$node[\"TikTok_API_Key\"].json[\"api_key\"]}}",
Â Â Â  "Content-Type": "application/json"
Â  },
Â  "parameters": {
Â Â Â  "category": "entertainment",
Â Â Â  "region": "US",
Â Â Â  "count": 50
Â  }
}
{
Â  "node_type": "Function",
Â  "functionCode": `
Â Â Â  const trendingData = $input.all();
Â Â Â  const keywords = [];
Â Â Â  const contentThemes = [];
Â Â Â  
Â Â Â  trendingData.forEach(item => {
Â Â Â Â Â  // Extract trending hashtags
Â Â Â Â Â  const hashtags = item.json.desc.match(/#[a-zA-Z0-9_]+/g) || [];
Â Â Â Â Â  keywords.push(...hashtags);
Â Â Â Â Â  
Â Â Â Â Â  // Analyze content themes
Â Â Â Â Â  const theme = {
Â Â Â Â Â Â Â  category: item.json.category,
Â Â Â Â Â Â Â  engagement: item.json.stats.playCount,
Â Â Â Â Â Â Â  duration: item.json.duration,
Â Â Â Â Â Â Â  trend_score: item.json.stats.shareCount / item.json.stats.playCount
Â Â Â Â Â  };
Â Â Â Â Â  contentThemes.push(theme);
Â Â Â  });
Â Â Â  
Â Â Â  return [{
Â Â Â Â Â  json: {
Â Â Â Â Â Â Â  trending_keywords: [...new Set(keywords)].slice(0, 20),
Â Â Â Â Â Â Â  content_themes: contentThemes.sort((a, b) => b.trend_score - a.trend_score).slice(0, 10),
Â Â Â Â Â Â Â  analysis_date: new Date().toISOString()
Â Â Â Â Â  }
Â Â Â  }];
Â  `
}

{
Â  "node_type": "OpenAI",
Â  "operation": "text",
Â  "model": "gpt-4",
Â  "prompt": `
Â Â Â  Based on these trending TikTok themes: {{$node["Content Analysis"].json["content_themes"]}}
Â Â Â  And keywords: {{$node["Content Analysis"].json["trending_keywords"]}}

{
Â  "node_type": "HTTP Request",
Â  "method": "POST",
Â  "url": "https://api.openai.com/v1/images/generations",
Â  "headers": {
Â Â Â  "Authorization": "Bearer {{$node[\"OpenAI_API_Key\"].json[\"api_key\"]}}",
Â Â Â  "Content-Type": "application/json"
Â  },
Â  "body": {
Â Â Â  "model": "dall-e-3",
Â Â Â  "prompt": "{{$node[\"AI Image Prompt Generator\"].json[\"choices\"][0][\"message\"][\"content\"]}}",
Â Â Â  "n": 4,
Â Â Â  "size": "1024x1024",
Â Â Â  "quality": "hd",
Â Â Â  "style": "vivid"
Â  }
}
{
Â  "node_type": "HTTP Request",
Â  "method": "POST",
Â  "url": "https://api.midjourney.com/v1/imagine",
Â  "headers": {
Â Â Â  "Authorization": "Bearer {{$node[\"Midjourney_API_Key\"].json[\"api_key\"]}}",
Â Â Â  "Content-Type": "application/json"
Â  },
Â  "body": {
Â Â Â  "prompt": "{{$node[\"AI Image Prompt Generator\"].json[\"processed_prompt\"]}} --ar 9:16 --style raw --v 6",
Â Â Â  "quality": "high"
Â  }
}
{
Â  "node_type": "Function",
Â  "functionCode": `
Â Â Â  const Canvas = require('canvas');
Â Â Â  const { createCanvas, loadImage } = Canvas;
Â Â Â  
Â Â Â  async function addBranding(imageUrl, brandingConfig) {
Â Â Â Â Â  const canvas = createCanvas(1024, 1024);
Â Â Â Â Â  const ctx = canvas.getContext('2d');
Â Â Â Â Â  
Â Â Â Â Â  // Load base image
Â Â Â Â Â  const baseImage = await loadImage(imageUrl);
Â Â Â Â Â  ctx.drawImage(baseImage, 0, 0, 1024, 1024);
Â Â Â Â Â  
Â Â Â Â Â  // Add branding elements
Â Â Â Â Â  ctx.fillStyle = brandingConfig.color || '#FF0000';
Â Â Â Â Â  ctx.font = 'bold 48px Arial';
Â Â Â Â Â  ctx.fillText(brandingConfig.watermark || 'Your Brand', 50, 970);
Â Â Â Â Â  
Â Â Â Â Â  // Add logo if provided
Â Â Â Â Â  if (brandingConfig.logoUrl) {
Â Â Â Â Â Â Â  const logo = await loadImage(brandingConfig.logoUrl);
Â Â Â Â Â Â Â  ctx.drawImage(logo, 874, 874, 100, 100);
Â Â Â Â Â  }
Â Â Â Â Â  
Â Â Â Â Â  return canvas.toDataURL();
Â Â Â  }
Â Â Â  
Â Â Â  const images = $input.all();
Â Â Â  const brandedImages = [];
Â Â Â  
Â Â Â  for (let item of images) {
Â Â Â Â Â  const brandedImage = await addBranding(item.json.url, {
Â Â Â Â Â Â Â  watermark: 'SnapSpot Pro',
Â Â Â Â Â Â Â  color: '#FFFC00',
Â Â Â Â Â Â Â  logoUrl: $node["Brand_Config"].json["logo_url"]
Â Â Â Â Â  });
Â Â Â Â Â  
Â Â Â Â Â  brandedImages.push({
Â Â Â Â Â Â Â  json: {
Â Â Â Â Â Â Â Â Â  original_url: item.json.url,
Â Â Â Â Â Â Â Â Â  branded_image: brandedImage,
Â Â Â Â Â Â Â Â Â  timestamp: new Date().toISOString()
Â Â Â Â Â Â Â  }
Â Â Â Â Â  });
Â Â Â  }
{
Â  "node_type": "OpenAI",
Â  "operation": "text",
Â  "model": "gpt-4",
Â  "prompt": `
Â Â Â  Create engaging Snapchat Spotlight captions for these generated images.
Â Â Â  
Â Â Â  Trending Keywords: {{$node["Content Analysis"].json["trending_keywords"]}}
Â Â Â  Content Themes: {{$node["Content Analysis"].json["content_themes"]}}
{
Â  "node_type": "Gmail",
Â  "operation": "send",
Â  "authentication": "oauth2",
Â  "resource": "message"
}

{
Â  "node_type": "Google Sheets",
Â  "operation": "read",
Â  "documentId": "{{$node[\"Config\"].json[\"email_list_sheet_id\"]}}",
Â  "range": "A:C",
Â  "description": "Read email list with Name, Email, Segment columns"
}
{
Â  "node_type": "Function",
Â  "functionCode": `
Â Â Â  const emailList = $node["Email List Processor"].json["values"];
Â Â Â  const generatedContent = $node["AI Image Generator"].json;
Â Â Â  const captions = $node["Caption Generator"].json;
Â Â Â  
Â Â Â  const personalizedEmails = [];
Â Â Â  
Â Â Â  emailList.forEach((contact, index) => {
Â Â Â Â Â  if (index === 0) return; // Skip header row
Â Â Â Â Â  
Â Â Â Â Â  const [name, email, segment] = contact;
Â Â Â Â Â  const contentIndex = index % generatedContent.data.length;
Â Â Â Â Â  const captionIndex = index % 3; // 3 caption variations
Â Â Â Â Â  
Â Â Â Â Â  const emailContent = {
Â Â Â Â Â Â Â  to: email,
Â Â Â Â Â Â Â  subject: \`ðŸ”¥ Fresh Snapchat Content Ready - \${name}!\`,
Â Â Â Â Â Â Â  html: \`
Â Â Â Â Â Â Â Â Â  <h2>Hey \${name}! ðŸ‘‹</h2>
Â Â Â Â Â Â Â Â Â  <p>Your daily Snapchat Spotlight content is ready!</p>
Â Â Â Â Â Â Â Â Â  
Â Â Â Â Â Â Â Â Â  <div style="text-align: center; margin: 20px 0;">
Â Â Â Â Â Â Â Â Â Â Â  <img src="\${generatedContent.data[contentIndex].url}" 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  style="max-width: 300px; border-radius: 10px;" 
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  alt="Generated Content">
Â Â Â Â Â Â Â Â Â  </div>
Â Â Â Â Â Â Â Â Â  
Â Â Â Â Â Â Â Â Â  <h3>Suggested Caption:</h3>
Â Â Â Â Â Â Â Â Â  <p style="background: #f0f0f0; padding: 10px; border-radius: 5px;">
Â Â Â Â Â Â Â Â Â Â Â  \${captions.choices[captionIndex].message.content}
Â Â Â Â Â Â Â Â Â  </p>
Â Â Â Â Â Â Â Â Â  
Â Â Â Â Â Â Â Â Â  <h3>Trending Keywords:</h3>
Â Â Â Â Â Â Â Â Â  <p>\${$node["Content Analysis"].json["trending_keywords"].slice(0, 10).join(', ')}</p>
Â Â Â Â Â Â Â Â Â  
Â Â Â Â Â Â Â Â Â  <p><strong>Segment:</strong> \${segment}</p>
Â Â Â Â Â Â Â Â Â  <p><em>Generated on: \${new Date().toLocaleDateString()}</em></p>
Â Â Â Â Â Â Â Â Â  
Â Â Â Â Â Â Â Â Â  <div style="margin-top: 30px; text-align: center;">
Â Â Â Â Â Â Â Â Â Â Â  <a href="#" style="background: #FFFC00; color: black; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
Â Â Â Â Â Â Â Â Â Â Â Â Â  Download Content Package
Â Â Â Â Â Â Â Â Â Â Â  </a>
Â Â Â Â Â Â Â Â Â  </div>
Â Â Â Â Â Â Â  \`
Â Â Â Â Â  };
Â Â Â Â Â  
Â Â Â Â Â  personalizedEmails.push({ json: emailContent });
Â Â Â  });
Â Â Â  
Â Â Â  return personalizedEmails;
Â  `
}
{
Â  "node_type": "HTTP Request",
Â  "method": "POST",
Â  "url": "https://www.reddit.com/api/v1/access_token",
Â  "headers": {
Â Â Â  "Authorization": "Basic {{$node[\"Reddit_Credentials\"].json[\"encoded_credentials\"]}}",
Â Â Â  "Content-Type": "application/x-www-form-urlencoded"
Â  },
Â  "body": "grant_type=client_credentials"
}
{
Â  "node_type": "HTTP Request",
Â  "method": "POST",
Â  "url": "https://oauth.reddit.com/api/submit",
Â  "headers": {
Â Â Â  "Authorization": "Bearer {{$node[\"Reddit API Authentication\"].json[\"access_token\"]}}",
Â Â Â  "Content-Type": "application/x-www-form-urlencoded",
Â Â Â  "User-Agent": "SnapchatSpotlightBot/1.0"
Â  },
Â  "body": {
Â Â Â  "sr": "snapchat",
Â Â Â  "kind": "image",
Â Â Â  "title": "ðŸ”¥ New Snapchat Spotlight Content Trend Alert!",
Â Â Â  "url": "{{$node[\"AI Image Generator\"].json[\"data\"][0][\"url\"]}}",
Â Â Â  "text": "{{$node[\"Caption Generator\"].json[\"choices\"][0][\"message\"][\"content\"]}}\n\nTrending keywords: {{$node[\"Content Analysis\"].json[\"trending_keywords\"].slice(0, 5).join(', ')}}"
Â  }
}

{
Â  "node_type": "HTTP Request",
Â  "method": "POST",
Â  "url": "https://oauth.reddit.com/api/compose",
Â  "headers": {
Â Â Â  "Authorization": "Bearer {{$node[\"Reddit API Authentication\"].json[\"access_token\"]}}",
Â Â Â  "Content-Type": "application/x-www-form-urlencoded"
Â  },
Â  "body": {
Â Â Â  "to": "{{$node[\"Reddit_User_List\"].json[\"username\"]}}",
Â Â Â  "subject": "Fresh Snapchat Content Alert! ðŸš€",
Â Â Â  "text": "Hey! Just generated some fresh Snapchat Spotlight content based on today's TikTok trends. Check it out: {{$node[\"AI Image Generator\"].json[\"data\"][0][\"url\"]}}"
Â  }
}
{
Â  "node_type": "Function",
Â  "functionCode": `
Â Â Â  const workflowData = {
Â Â Â Â Â  execution_id: $executionId,
Â Â Â Â Â  timestamp: new Date().toISOString(),
Â Â Â Â Â  tiktok_trends_analyzed: $node["Content Analysis"].json["content_themes"].length,
Â Â Â Â Â  images_generated: $node["AI Image Generator"].json["data"].length,
Â Â Â Â Â  emails_sent: $node["Personalized Email Generator"].json.length,
Â Â Â Â Â  reddit_posts: 1,
Â Â Â Â Â  trending_keywords: $node["Content Analysis"].json["trending_keywords"].slice(0, 10),
Â Â Â Â Â  success_rate: 1.0
Â Â Â  };
Â Â Â  
Â Â Â  return [{ json: workflowData }];
Â Â 
}
{
Â  "node_type": "Google Sheets",
Â  "operation": "append",
Â  "documentId": "{{$node[\"Config\"].json[\"analytics_sheet_id\"]}}",
Â  "range": "Analytics!A:H",
Â  "values": [
Â Â Â  [
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"timestamp\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"tiktok_trends_analyzed\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"images_generated\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"emails_sent\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"reddit_posts\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"trending_keywords\"].join(', ')}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"success_rate\"]}}",
Â Â Â Â Â  "{{$node[\"Analytics Collector\"].json[\"execution_id\"]}}"
Â Â Â  ]
Â  ]
}
{
Â  "TIKTOK_API_KEY": "your_tiktok_api_key",
Â  "OPENAI_API_KEY": "your_openai_api_key",
Â  "MIDJOURNEY_API_KEY": "your_midjourney_api_key",
Â  "GMAIL_CLIENT_ID": "your_gmail_client_id",
Â  "GMAIL_CLIENT_SECRET": "your_gmail_client_secret",
Â  "REDDIT_CLIENT_ID": "your_reddit_client_id",
Â  "REDDIT_CLIENT_SECRET": "your_reddit_client_secret",
Â  "REDDIT_USERNAME": "your_reddit_username",
Â  "REDDIT_PASSWORD": "your_reddit_password"
}
{
Â  "node_type": "Function",Â  
Â  "description": "Filter generated content based on quality metrics",
Â  "functionCode": "// AI-powered content scoring and filtering logic"
}
{
Â  "node_type": "Function",
Â  "description": "Split test different content variations",
Â  "functionCode": "// A/B testing logic for optimal engagement"
}

{
Â  "node_type": "Function",
Â  "description": "Ensure content meets platform guidelines",
Â  "functionCode": "// Content moderation and compliance verification"
}


Â Â Â  
